@page "/todo"

<h3>@HeaderName</h3>

<EditForm class="form-inline" Model="Task" OnValidSubmit="AddTask">
    <input class="form-control mx-2" type="text" @bind-value="Task.TaskName" />
    <button class="btn btn-outline-primary m-2">add task</button>
</EditForm>

<div class="progress-bar my-2 mx-2" role="progressbar" style="width@(Percentage)%" aria-valuemax="100" aria-valuemin="0">
    @(Percentage)%
</div> 

<ul class="list-group my-2">
    @foreach(var taskitem in TaskLists)
    {
        if (taskitem.IsCompleted)
        {
            <!--Task Completed to del tag-->
            <li class="list-group-item list-group-item-success mx-1" @onclick="(()=> taskitem.IsCompleted= !taskitem.IsCompleted)"><del>@taskitem.TaskName</del></li>

        }
        else
        {
           <!--Task Not Completed-->
            <li class="list-group-item list-group-item-secondary mx-1" @onclick="(()=> taskitem.IsCompleted= !taskitem.IsCompleted)">@taskitem.TaskName</li>
        }
    } 
</ul>


@code {
    protected List<TaskModel> TaskLists = new();

    protected TaskModel Task = new();

    private void AddTask()
    {
        if(Task.TaskName != null) TaskLists.Add(Task);

        Task = new TaskModel();
    }

    protected int Percentage
    {
        get
        {
            return TaskLists.Count > 0  ?  (TaskLists.Count(x => x.IsCompleted) * 100 / TaskLists.Count)  :  0 ;
        }
    }
    [Parameter]
    public string HeaderName { get; set; }

    protected override void OnInitialized()
    {
        if (String.IsNullOrEmpty(HeaderName)) HeaderName = "ToDo List";
    }
}
